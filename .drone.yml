
# RUN container when DB in test would be needed (and add wait_db.sh script !!)
services:
  postgres:
    image: postgres
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: user
      POSTGRES_DB: db

pipeline:
  flake8:
    image: python:3
    when:
      event: push
    environment:
      - PYTHONPATH=/drone/src
    commands:
      - pip install --no-cache flake8
      - flake8
  test:
    image: python:3
    when:
      event: push
    environment:
      - PYTHONPATH=/drone/src
      - DB_URL=postgresql://user:password@postgres:5432/db
    commands:
      - pip install --no-cache -r requirements.txt
      - python3 scripts/wait_for_postgres.py $DB_URL
      - pytest

#  build-web:
#    image: plugins/docker
#    username:
#      from_secret: docker_username
#    password:
#      from_secret: docker_password
#    when:
#      branch:
#      - master
#    dockerfile: docker/Dockerfile.web
#    settings:
#      repo: octoman/thupoll-web
#      tags: master
#
#  release:
#    image: ...
#    ...

  telegram-push:
    image: appleboy/drone-telegram
    token:
      from_secret: telegram_token
    to:
      from_secret: telegram_notification_chat_id
    format: html
    when:
      event: push
      status:
      - success
      - failure
    message: >
      {{#success build.status}}
        ✔️ <a href='http://thupoll.liinda.ru:8090/octomen/thupoll/{{build.number}}'>build</a> succeeded. Good job.
      {{else}}
        ✖️ <a href='http://thupoll.liinda.ru:8090/octomen/thupoll/{{build.number}}'>build</a> failed. Fix me please.
      {{/success}}

  telegram-PR:
    image: appleboy/drone-telegram
    token:
      from_secret: telegram_token
    to:
      from_secret: telegram_notification_chat_id
    format: html
    when:
      event: pull_request
    message: >
      👉 New or update PR for <a href='{{commit.link}}'>commit</a> from {{commit.author}}

